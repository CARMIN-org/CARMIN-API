swagger: '2.0'
info:
  version: '0.2.1'
  title: CARMIN - Common API for Research Medical Imaging Network 
  description: REST API for exchanging data and remotely calling pipelines.
  license:
    name: MIT License
    url: https://opensource.org/licenses/MIT
  contact:
    name: CARMIN mailing list
    url: https://groups.google.com/d/forum/carmin
    email: carmin@googlegroups.com
schemes:
  - https 
consumes:
  - application/json
produces:
  - application/json

securityDefinitions:
  apiKey:
      type: apiKey
      name: apikey
      in: header
      description: An API key that must be provided by the platform.
security: 
  - apiKey: []

paths:
  /platform:
    get:
      description: 
        Returns information about the platform.
        https must be supported in the list of the supported protocols.
      operationId: getPlatformProperties
      security: []
      responses:
        '200':
          description: successful response
          schema:
            $ref: '#/definitions/PlatformProperties'
        default:
          $ref: '#/responses/GenericError'
  /authenticate:
    post:
      description:
        Returns the api key necessary to use the API. The key can be dynamic (a new one for each request) or static (always the same one until the user change it in a back-end)
      operationId: authenticate
      security: []
      parameters: 
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/AuthenticationCredentials'
      responses:
        '200':
          description: successful response
          schema:
            $ref: '#/definitions/Authentication'
        default:
            $ref: '#/responses/GenericError'
  /executions:
    get:
      description:
        list all execution Ids in the platform which are ordered in decreasing submission time.
        All the executions that were launched by the user must be returned. It is up to the platform to return executions that the user did not launch.
        When studyIdentifier is present, all the executions that the user launched in the study must be returned.
      operationId: listExecutions
      parameters:
        - name: studyIdentifier
          in: query
          type: string
        - name: offset
          in: query
          type: integer
        - name: limit
          in: query
          type: integer
      responses:
        '200':
          description: successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/Execution'
        default:
          $ref: '#/responses/GenericError'
    post:
      description:
        Initializes an execution. The successful response must contain the execution identifier. If status “Initializing” is returned, playExecution must be called to start the execution.
      operationId: createExecution
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/Execution'
      responses:
        '200':
          description: successful response
          schema:
            $ref: '#/definitions/Execution'
        default:
          $ref: '#/responses/GenericError'
  /executions/count:
    get:
      operationId: countExecutions
      parameters:
        - name: studyIdentifier
          in: query
          type: string
      responses:
        '200':
          description: successful response
          schema:
            type: integer
        default:
          $ref: '#/responses/GenericError'
  /executions/{executionIdentifier}:
    parameters:
      - name: executionIdentifier
        in: path
        required: true      
        type: string
        format: ascii
    get:
      description: get information about an execution
      operationId: getExecution
      responses:
        '200':
          description: successful response
          schema:
            $ref: '#/definitions/Execution'
        default:
          $ref: '#/responses/GenericError'
    put:
      description:
        Modify an execution. Only the name and the timeout of the execution can be modified. Changes to the identifier or the status will raise errors. Changes to the other properties will be ignored.
      operationId: updateExecution
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/Execution'
      responses:
        '204':
          description: successful response
        default:
          $ref: '#/responses/GenericError'
  /executions/{executionIdentifier}/results:
    get:
      description: get the result files of the execution
      operationId: getExecutionResults
      produces:
      - application/json
      parameters:
      - name: executionIdentifier
        in: path
        required: true
        type: string
        format: ascii
      - name: protocol
        in: query
        type: string
        description: if not specified the default protocol is https
      responses:
        '200':
          description: successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/Path'
        default:
          $ref: '#/responses/GenericError'
  /executions/{executionIdentifier}/stdout:
    get:
      description: get stdout of an execution
      operationId: getStdout
      produces:
      - text/plain
      - application/json
      parameters:
      - name: executionIdentifier
        in: path
        required: true
        type: string
        format: ascii
      responses:
        '200':
          description: successful response
          schema:
            type: string
        default:
          $ref: '#/responses/GenericError'
  /executions/{executionIdentifier}/stderr:
    get:
      description: get stderr of an execution
      operationId: getStderr
      produces:
      - text/plain
      - application/json
      parameters:
      - name: executionIdentifier
        in: path
        required: true
        type: string
        format: ascii
      responses:
        '200':
          description: successful response
          schema:
            type: string
        default:
          $ref: '#/responses/GenericError'
  /executions/{executionIdentifier}/start:
    put:
      description: play an execution
      operationId: playExecution
      parameters:
      - name: executionIdentifier
        in: path
        required: true      
        type: string
        format: ascii
      responses:
        '204':
          description: successful response
        default:
          $ref: '#/responses/GenericError'
  /executions/{executionIdentifier}/kill:
    put:
      description: kill an execution
      operationId: killExecution
      parameters:
      - name: executionIdentifier
        in: path
        required: true      
        type: string
        format: ascii
      responses:
        '204':
          description: successful response
        default:
          $ref: '#/responses/GenericError'
  /executions/{executionIdentifier}/delete:
    delete:
      description:
        Delete an execution. This will kill the underlying processes (if possible) and free all resources associated with this execution (depending of the configuration given in as body input).
      operationId: deleteExecution
      parameters:
        - name: executionIdentifier
          in: path
          required: true      
          type: string
          format: ascii
        - name: body
          in: body
          description: delete configuration
          schema:
            $ref: '#/definitions/DeleteExecutionConfiguration'
      responses:
        '204':
          description: successful response
        default:
          $ref: '#/responses/GenericError'
  /path/{uri}:
    get:
      description: Shows the attributes of a given path
      operationId: getPath
      parameters:
        - name: uri
          in: path
          required: true
          description: path URI
          type: string
          format: ascii
      responses:
        '200':
          description: successful response
          schema:
            $ref: '#/definitions/Path'
        default: 
          $ref: '#/responses/GenericError' 
  /path/exists/{uri}:
    get:
      description: Tests if the path exists
      operationId: existsPath
      parameters:
        - name: uri
          in: path
          required: true
          description: path URI
          type: string
          format: ascii
      responses:
        '200':
          description: successful response
          schema:
            type: boolean
        default: 
          $ref: '#/responses/GenericError'       
  /path/{uri}/delete:
    delete:
      description: Deletes the path. Returns an error if user is not allowed.
      operationId: deletePath
      parameters:
        - name: uri
          in: path
          required: true
          description: path URI
          type: string
          format: ascii
      responses:
        '204':
          description: successful response
        default: 
          $ref: '#/responses/GenericError'
  /path/{uri}/list:
    get:
      description: When uri refers to a directory, returns a list of Paths in this directory.
      operationId: listDirectory
      parameters:
        - name: uri
          in: path
          required: true
          description: path URI
          type: string
          format: ascii
      responses:
        '200':
          description: successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/Path'
        default: 
          $ref: '#/responses/GenericError'
  /path/{uri}/mkdir:
    get:
      description: Creates a directory at uri and returns the corresponding Path object.
      operationId: createDirectory
      parameters:
        - name: uri
          in: path
          required: true
          description: path URI
          type: string
          format: ascii
      responses:
        '200':
          description: successful response
          schema:
              $ref: '#/definitions/Path'
        default: 
          $ref: '#/responses/GenericError'
  /path/{uri}/content:
    get:
      description: Returns the Path content encoded in base 64. Platform may impose restrictions on the max size of files that can be downloaded with this method. 
      operationId: downloadPath
      parameters:
        - name: uri
          in: path
          required: true
          description: path URI
          type: string
          format: ascii
      responses:
        '200':
          description: successful response
          schema:
            type: string
            format: ascii
        default: 
          $ref: '#/responses/GenericError'
    put:
      description: Path content is passed in the HTTP request, encoded in base64. Platform may impose restrictions on the max size of files that can be uploaded with this method.
      operationId: uploadPath
      parameters:
        - name: uri
          in: path
          required: true
          description: path URI
          type: string
          format: ascii
      responses:
        '200':
          description: successful response
          schema:
            type: string
            format: ascii
        default: 
          $ref: '#/responses/GenericError'
  /pipelines:
    get:
      description:
        All the pipelines that the user can execute must be returned.
        It is up to the platform to return pipelines that the user cannot execute.
        When studyIdentifier is present, all the pipelines that the user can execute in the study must be returned. In this case, execution rights denote the rights to execute the pipeline in the study.
      operationId: listPipelines
      parameters:
        - name: studyIdentifier
          in: query
          type: string
          format: ascii
      responses:
        '200':
          description: successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/Pipeline'
        default:
          $ref: '#/responses/GenericError'
  /pipelines/{pipelineIdentifier}:
    get:
      description: Show the definition of a given pipeline
      operationId: getPipeline
      parameters:
        - name: pipelineIdentifier
          in: path
          required: true
          description: pipeline identifier
          type: string
          format: ascii
      responses:
        '200':
          description: successful response
          schema:
            $ref: '#/definitions/Pipeline'
        default: 
          $ref: '#/responses/GenericError'
responses:
  GenericError:
    description: A functional or internal error occured processing the request
    schema:
      $ref: '#/definitions/ErrorCodeAndMessage'
definitions:
  AuthenticationCredentials:
    type: object
    required:
      - username
      - password
    properties:
      username:
        type: string
      password:
        type: string
  Authentication:
    type: object
    required:
      - httpHeader
      - httpHeaderValue
    properties:
      httpHeader:
        type: string
      httpHeaderValue:
        type: string
  PlatformProperties:
    type: object
    required:
      - supportedTransferProtocols
      - supportedModules
      - supportedAPIVersion
    properties:
      platformName: # not present in 0.2 version, keep it as optional
        type: string
        description: Name of the platform.
      APIErrorCodesAndMessages:
        type: array
        items:
          $ref: '#/definitions/ErrorCodeAndMessage'
      supportedTransferProtocols:
        type: array
        items:
          type: string
          enum: ["http", "https", "ftp", "sftp", "ftps", "scp", "webdav"]
        description:
          Protocol names must be URL prefixes (e.g. "http", "https", "ftp", "sftp", "ftps", "scp", "webdav"). 
      supportedModules:
        type: array
        items:
          type: string
          enum: ["Processing", "Data", "AdvancedData", "Management", "Commercial", ]
      defaultLimitListExecutions: # not present in 0.2, keep it as optional
        type: integer
        format: int64
        description: The number of Executions returned by getExecutions
      email:
        type: string
        format: email
      platformDescription:
        type: string
      minAuthorizedExecutionTimeout:
        type: integer
        format: int64
      maxAuthorizedExecutionTimeout:
        type: integer
        format: int64
        description: 0 or absent means no max timeout. max has to be greater or equal to the min.
      defaultExecutionTimeout:
        type: integer
        format: int64
      unsupportedMethods: 
      # not present in 0.2, keep it as optional
        type: array
        items:
          type: string
        description: List of optional methods that are not supported by the platform. Must be consistent with the "isKillExecutionSupported" property.
      defaultStudy:
        type: string
        format: ascii
      supportedAPIVersion:
        type: string
        format: ascii
    additionalProperties: true # allow extensions
  Pipeline:
    type: object
    required:
      - identifier
      - name
      - version
      # - parameters optional in 0.2
    properties:
      identifier:
        type: string
        format: ascii
      name:
        type: string
      version:
        type: string
        format: ascii
      description:
        type: string
      canExecute:
        type: boolean
        description: true if the user who requested the pipeline can execute it
      parameters:
        type: array
        items:
          $ref: '#/definitions/PipelineParameter'
      errorCodesAndMessages:
        type: array
        items:
          $ref: '#/definitions/ErrorCodeAndMessage'
  PipelineParameter:
    type: object
    required:
      - name
      - type
      - isOptional
      - isReturnedValue
    properties:
      name:
        type: string
        format: ascii
      type:
        $ref: '#/definitions/ParameterType'
      isOptional:
        type: boolean
      isReturnedValue:
        type: boolean
      defaultValue:
        description: Default value. It must be consistent with the parameter type.
      description:
        type: string
  ParameterType:
    type: string
    enum: [File,String,Boolean,Int64,Double,List]
  ErrorCodeAndMessage:
    type: object
    required:
      - errorCode
      - errorMessage
    properties:
      errorCode:
        type: integer
        format: int64
      errorMessage:
        type: string
  Execution:
    type: object
    required:
      - name
      - pipelineIdentifier
      - inputValues
    properties:
      identifier:
        type: string
        format: ascii
        readOnly: true
        description: execution id. Must always be present in responses.
      name:
        type: string
        description: execution name
      pipelineIdentifier:
        type: string
        format: ascii
        description: which pipeline that started this execution
      timeout:
        type: integer
        format: int64
        description: The timeout in seconds until which the execution is killed and deleted with all its files. 0 or absense means no timeout
      status:
        type: string
        enum: [Initializing,Ready,Running,Finished,InitializationFailed,ExecutionFailed,Unknown,Killed]
        readOnly: true
        description: The status of the execution. Must always be present in responses.
      inputValues:
        type: object
        additionalProperties: true
        description:
          Represents the input as a key/value object. The types should respect the parameters of the pipeline used for the execution.
      returnedFiles:
        type: object
        additionalProperties:
          type: array
          items: 
            type: string
            format: url
        readOnly: true
        description: 
          Absent when not available (e.g. execution still running). Empty if no returned file is produced.
          Each key/value of the "returnedFiles" object corresponds to an output pipeline parameter (with "isReturnedValue" set to true) and the key must be the parameter name. The value must be an array of valid URL strings.
          A value array can be empty if the output parameter produces no value. It can have several URLs entries when the output is a directory with several files, a big file split in several download links, several files or any other implementation specific design.
      studyIdentifier:
        type: string
        format: ascii
      errorCode:
        type: integer
        format: int64
        readOnly: true
      startDate:
        type: integer
        format: int64
        description: Time in seconds since Unix epoch
        readOnly: true
      endDate:
        type: integer
        format: int64
        description: Time in seconds since Unix epoch
        readOnly: true
  DeleteExecutionConfiguration:
    type: object
    required: [deleteFiles]
    properties:
      deleteFiles:
        type: boolean
  Path:
    type: object
    required:
      - platformURI
      - lastModificationDate
      - isDirectory
    properties:
      platformURI:
        type: string
        description: A valid URI, complying to the following pattern "scheme:[//[user:password@]host[:port]][/]path[?query][#fragment]". For instance, "shablanc://shablanc.somedomain.org/home/foo/file.txt" and "sftp://foo@server1.localhost/home/foo/file.txt" are valid platform URIs. In addition, the path in this URI must be consistent with the path of files and directories uploaded and downloaded by clients. For instance, if a user uploads a directory structure "dir/{file1.txt,file2.txt}", it is expected that the path of the first file will be "[prefix]/dir/file1.txt" and that the path of the second file will be "[prefix]/dir/file2.txt" where [prefix] depends on the upload parameters, in particular destination directory.
      lastModificationDate:
        type: integer
        format: int64
        description: Date of last modification, in seconds since the Epoch (UNIX timestamp).
      isDirectory:
        type: boolean
        description: True if the path represents a directory.
      exists:
        type: boolean
        description: True if path exists.
      size:
        type: integer
        format: int64
        description: For a file, size in bytes. For a directory, sum of all the sizes of the files contained in the directory (recursively).
      executionId:
        type: string
        format: ascii
        description: Id of the Execution that produced the Path.
      mimeType:
        type: string
        format: ascii
        description: mime type based on RFC 6838.
